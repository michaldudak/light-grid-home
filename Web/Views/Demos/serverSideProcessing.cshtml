<script>
	function serverSideProcessingController($scope, $http, lgServerDataProviderFactory) {
		$scope.dataProvider = lgServerDataProviderFactory.create("/Demos/SampleData");
		$scope.dataProvider.limitTo(10);

		$scope.$watch("filterExpression", function () {
			$scope.dataProvider.filter($scope.filterExpression);
		});
	}
</script>

<h2>Fully featured grid based on remote data</h2>

<p>
	The following sample presents an editable grid with sorting, paging and filtering features.
	It is backed by an array with almost 30000 elements (US zip codes taken from <a rel="nofollow" href="http://jsonstudio.com/resources">http://jsonstudio.com/resources</a>).
</p>

<div ng-controller="serverSideProcessingController">
	<div class="btn-toolbar">
		<div class="btn-group">
			<input type="text" ng-model="filterExpression" ng-model-options="{debounce: 150}" class="form-control" placeholder="type here to search" />
		</div>
	</div>

	<script type="text/ng-template" id="detailsTemplate.html">
		<div class="panel panel-default">
			<div class="panel-body">
				<dl>
					<dt>City</dt>
					<dd>{{ rowData.city }}</dd>
					<dt>State</dt>
					<dd>{{ rowData.state }}</dd>
					<dt>ZIP code</dt>
					<dd>{{ rowData._id }}</dd>
				</dl>
			</div>
		</div>
	</script>

	<table lg-grid id="sampleGrid" class="table table-striped" model="dataProvider.getGridModel()">
		<tr lg-column-templates>
			<td lg-column>
				<lg-header-view>
					<span lg-sorter sort-property='city' data-provider='dataProvider'>City</span>
				</lg-header-view>
				<lg-view>
					{{ rowData.city }}
				</lg-view>
				<lg-view view="edit">
					<input ng-model="viewData.city" class="form-control input-sm" />
				</lg-view>
			</td>
			<td lg-column>
				<lg-header-view>
					<span lg-sorter sort-property='state' data-provider='dataProvider'>State</span>
				</lg-header-view>
				<lg-view>
					{{ rowData.state }}
				</lg-view>
				<lg-view view="edit">
					<input ng-model="viewData.state" class="form-control input-sm" />
				</lg-view>
			</td>
			<td lg-column>
				<lg-header-view>
					<span lg-sorter sort-property='_id' data-provider='dataProvider'>ZIP</span>
				</lg-header-view>
				<lg-view>
					{{ rowData._id }}
				</lg-view>
				<lg-view view="edit">
					<input ng-model="viewData._id" class="form-control input-sm" />
				</lg-view>
			</td>
			<td lg-column>
				<lg-header-view>
					<span lg-sorter sort-property='loc[0]' data-provider='dataProvider'>Lat</span>
				</lg-header-view>
				<lg-view>
					{{ rowData.loc[0] | number }}
				</lg-view>
				<lg-view view="edit">
					<input type="number" ng-model="viewData.loc[0]" class="form-control input-sm" />
				</lg-view>
			</td>
			<td lg-column title="'Longitude'">
				<lg-header-view>
					<span lg-sorter sort-property='loc[1]' data-provider='dataProvider'>Lon</span>
				</lg-header-view>
				<lg-view>
					{{ rowData.loc[1] | number }}
				</lg-view>
				<lg-view view="edit">
					<input type="number" ng-model="viewData.loc[1]" class="form-control input-sm" />
				</lg-view>
			</td>
			<td lg-column>
				<lg-header-view>
					<span lg-sorter sort-property='pop' data-provider='dataProvider'>Population</span>
				</lg-header-view>
				<lg-view>
					{{ rowData.pop }}
				</lg-view>
				<lg-view view="edit">
					<input type="number" ng-model="viewData.pop" class="form-control input-sm" />
				</lg-view>
			</td>
			<td lg-column>
				<div lg-view>
					<button class="btn btn-default btn-sm" lg-switch-view="edit">Edit</button>
					<button lg-toggle-expanded-row="detailsTemplate.html" class="btn btn-default btn-sm">Details</button>
				</div>
				<div lg-view="edit">
					<button class="btn btn-primary btn-sm" lg-persist-data data-provider="dataProvider">Save</button>
					<button class="btn btn-default btn-sm" lg-switch-view="read">Cancel</button>
					<button lg-toggle-expanded-row="detailsTemplate.html" class="btn btn-default btn-sm">Details</button>
				</div>
			</td>
		</tr>
	</table>
	<lg-pager data-provider="dataProvider" page-size-options="10,20,50,100"></lg-pager>
</div>
